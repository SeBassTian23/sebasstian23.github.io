extends default.pug

include /shared/block-hero
include /shared/block-post
include /shared/block-social

block append head 
  script(defer, src="https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js")
  if album
    script(defer, src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js")
    script(defer, src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js",integrity="sha384-GNFwBvfVxBkLMJpYMOABq3c+d3KnQxudP/mGPkzpZSTYykLBNsZEnG2D9G/X/+7D", crossorigin="anonymous")
  script(defer, src="https://cdn.jsdelivr.net/npm/lunr@2.3.9/lunr.min.js")
  script(defer, src="/javascript/search.js")
  script(defer, src="/javascript/share-menu.js")

block append header 
  include /shared/block-header-1

block append content
  +post-header(description, image, imageAlt, album)
  .container
    .row
      .col-md-9.block-post-1
        article(lang=language)
          //- Article Header
          section.row.mb-4
            .col
              .mb-1.text-muted(style="text-transform: uppercase;")
                each tag, index in tags
                  - tagURL = "/tags/" + filters.slug(tag) + "/"
                  if( index > 0)
                    span.mx-2 |
                  a.text-muted(href=filters.url(tagURL) style="text-decoration:none") #{tag}

              h1.text-primary #{title}
              .small.mb-1 #{author || "unknown"}
              .small.text-muted #[time(datetime=filters.htmlDatetimeString(page.date)) #{filters.formatedDate(page.date)}]

          section.row.post-content   
            .col.clearfix
              | !{content}

          if album 
            +album(album)

          if imagesource
            small.text-muted !{filters.markdown(imagesource)}

      .col-md-3
        aside.pt-5(style="z-index:1!important;", class=(toc? "sticky-md-top": ""))
          //- Search Container
          .row.mb-4
            .col.px-3
              .fs-6.lh-lg.fw-medium Search
              input.form-control#searchField(type="search", placeholder="Search Articles")
              .d-flex.flex-row.justify-content-end
                ul#searchResults.dropdown-menu.dropdown-menu-end(style="min-width:20rem;")

          //-  Table of Content Container
          if toc
            .row
              .col.px-3
                .fs-6.lh-lg.fw-medium Page Content
                | !{filters.toc(content, {tags:['h2', 'h3'], wrapperClass:"toc", ul: true })}

          //-  Table of Content Container
          if location
            .row
              .col.px-3
                .fs-6.lh-lg.fw-medium Location
                | !{ filters.image( filters.url( filters.generateMap(location, presetsMap["post-dotted"], page.fileSlug) ))}

          if download
            .row.mb-4
              .col.px-3
                .fs-6.lh-lg.fw-medium Downloads
                - if (typeof download === "string")
                  - filename = download.split("/").splice(-1)
                  a.tag.text-bg-light.link-darken.me-1.mb-1(href=filters.url(download)) #[i.bi.bi-file-earmark] #{download}
                - else if (typeof download === "object" && Array.isArray(download))
                  each file, index in download
                    - filename = file.split("/").splice(-1)
                    a.tag.text-bg-light.link-darken.me-1.mb-1(href=filters.url(file)) #{filename}
                    //- TODO: Add different icons depending on the file type

          //- Tags
          if collections.tagList.length > 0
            .row.mb-4
              .col.px-3
                .fs-6.lh-lg.fw-medium Tags
                each tag, index in collections.tagList
                  - tagURL = "/tags/" + filters.slug(tag) + "/"
                  a.tag.text-bg-light.link-darken.me-1.mb-1(href=filters.url(tagURL)) #{tag}             

          //- More Posts
          if collections.posts.length > 1
            .row
              .col.px-3
                .fs-6.lh-lg.fw-medium More Posts
                //- collection, item, limit = 3, random = true
                .row.d-flex.justify-content-around.px-3
                  - var suggestions = helpers.getSiblingContent(collections.posts, page)
                  each el in suggestions
                    +post-card-sm(el)(class="col-12 mb-2 p-0")
          
          //- Share Links
          .row
            .col.px-3
              hr
              .d-flex.justify-content-around
                +social-share({...page,...{title: title}})(class="col-12 mb-3 text-center")

    script.
      document.addEventListener('DOMContentLoaded', function () {
        // Get the p element as a node
        const inlineAlbums = document.querySelectorAll(".post-album-inline p").forEach( parent => {
          // Save a reference to the parent's children
          const children = parent.childNodes;
          // Create a DocumentFragment to hold the children
          const docFrag = document.createDocumentFragment();
          // Append all children to the DocumentFragment
          while(children.length > 0) {
            docFrag.appendChild(children[0]);
          }
          // Replace the parent with the DocumentFragment
          parent.replaceWith(docFrag);
        });

        document.querySelectorAll(".post-album div > *").forEach( child => {
          if(child.nodeName == 'BR')
            child.remove()
          else if (child.nodeName == 'DIV')
            child;
          else
            child.setAttribute('class', 'col mb-2 px-1');
        })

        let background = window.getComputedStyle( document.body ,null).getPropertyValue('background-color');
        const zoom = mediumZoom('.post-album picture img', {background, container: null});

        //- col mb-2 px-1
        // Create an observer instance linked to the callback function
        const observer = new MutationObserver( (mutationList, observer) => {
          for (const mutation of mutationList) {
            if (mutation.type === "attributes" && mutation.attributeName === "data-bs-theme" ) {
              let background = window.getComputedStyle( document.body ,null).getPropertyValue('background-color');
              zoom.update({background});
            }
          }
        });

        // Start observing the target node for configured mutations
        observer.observe( document.querySelector('html'), {
          attributes: true,
          childList: false,
          subtree: false
        });

        //- zoom.on('open', event => {
        //-   let background = window.getComputedStyle( document.body ,null).getPropertyValue('background-color');
        //-   zoom.update({background});
        //- });

        document.querySelectorAll('.post-map p').forEach( e => e.remove() )

      });

block append footer
    include /shared/block-footer
